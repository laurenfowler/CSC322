     1                                  ;Lauren Fowler
     2                                  ;CSC 322
     3                                  ;12-11-18
     4                                  ;Happy Snek Program
     5                                  ;This Snek does not make Lauren happy
     6                                  
     7                                  ;snek == python
     8                                  
     9                                  ;define struct
    10                                  STRUC snekStruct
    11 00000000 <res 00000002>          	.esc:  RESB 2 ;space for <esc>[
    12 00000002 <res 00000002>          	.row:  RESB 2 ;two digit # characters
    13 00000004 <res 00000001>          	.semi: RESB 1 ;space for ;
    14 00000005 <res 00000002>          	.col:  RESB 2 ; two digit # characters
    15 00000007 <res 00000001>          	.H:	   RESB 1 ;space for H
    16 00000008 <res 00000001>          	.char: RESB	1 ;space for the character
    17                                  	.size:
    18                                  ENDSTRUC
    19                                   
    20                                  ;define macro
    21                                  %macro print_to_screen 3
    22                                  	;pusha
    23                                  	mov eax, 4
    24                                  	mov ebx, 1
    25                                  	mov ecx, %1 ;start of screen
    26                                  	add ecx, %2
    27                                  	mov edx, %3
    28                                  	int 80h
    29                                  	;popa
    30                                  %endmacro
    31                                  
    32                                  
    33                                  section .data
    34                                  ;;;;;;; Screen Pattern
    35 00000000 2A2A2A2A2A2A2A2A2A-     screen: db      "********************************************************************************",0ah
    36 00000009 2A2A2A2A2A2A2A2A2A-
    37 00000012 2A2A2A2A2A2A2A2A2A-
    38 0000001B 2A2A2A2A2A2A2A2A2A-
    39 00000024 2A2A2A2A2A2A2A2A2A-
    40 0000002D 2A2A2A2A2A2A2A2A2A-
    41 00000036 2A2A2A2A2A2A2A2A2A-
    42 0000003F 2A2A2A2A2A2A2A2A2A-
    43 00000048 2A2A2A2A2A2A2A2A0A 
    44 00000051 2A2020202020202020-             db      "*                          *                           *                       *",0ah
    45 0000005A 202020202020202020-
    46 00000063 202020202020202020-
    47 0000006C 2A2020202020202020-
    48 00000075 202020202020202020-
    49 0000007E 202020202020202020-
    50 00000087 202A20202020202020-
    51 00000090 202020202020202020-
    52 00000099 202020202020202A0A 
    53 000000A2 2A2020202020202A2A-             db      "*      *************       *        *************      *       *********       *",0ah
    54 000000AB 2A2A2A2A2A2A2A2A2A-
    55 000000B4 2A2A20202020202020-
    56 000000BD 2A2020202020202020-
    57 000000C6 2A2A2A2A2A2A2A2A2A-
    58 000000CF 2A2A2A2A2020202020-
    59 000000D8 202A20202020202020-
    60 000000E1 2A2A2A2A2A2A2A2A2A-
    61 000000EA 202020202020202A0A 
    62 000000F3 2A2020202020202020-             db      "*                          *                           *                       *",0ah
    63 000000FC 202020202020202020-
    64 00000105 202020202020202020-
    65 0000010E 2A2020202020202020-
    66 00000117 202020202020202020-
    67 00000120 202020202020202020-
    68 00000129 202A20202020202020-
    69 00000132 202020202020202020-
    70 0000013B 202020202020202A0A 
    71 00000144 2A2020202020202020-             db      "*                          *                           *                       *",0ah
    72 0000014D 202020202020202020-
    73 00000156 202020202020202020-
    74 0000015F 2A2020202020202020-
    75 00000168 202020202020202020-
    76 00000171 202020202020202020-
    77 0000017A 202A20202020202020-
    78 00000183 202020202020202020-
    79 0000018C 202020202020202A0A 
    80 00000195 2A2020202020202020-             db      "*                          *                           *                       *",0ah
    81 0000019E 202020202020202020-
    82 000001A7 202020202020202020-
    83 000001B0 2A2020202020202020-
    84 000001B9 202020202020202020-
    85 000001C2 202020202020202020-
    86 000001CB 202A20202020202020-
    87 000001D4 202020202020202020-
    88 000001DD 202020202020202A0A 
    89 000001E6 2A2020202020202020-             db      "*                                                                              *",0ah
    90 000001EF 202020202020202020-
    91 000001F8 202020202020202020-
    92 00000201 202020202020202020-
    93 0000020A 202020202020202020-
    94 00000213 202020202020202020-
    95 0000021C 202020202020202020-
    96 00000225 202020202020202020-
    97 0000022E 202020202020202A0A 
    98 00000237 2A2020202020202020-             db      "*           **************************        ***********************          *",0ah
    99 00000240 2020202A2A2A2A2A2A-
   100 00000249 2A2A2A2A2A2A2A2A2A-
   101 00000252 2A2A2A2A2A2A2A2A2A-
   102 0000025B 2A2A20202020202020-
   103 00000264 202A2A2A2A2A2A2A2A-
   104 0000026D 2A2A2A2A2A2A2A2A2A-
   105 00000276 2A2A2A2A2A2A202020-
   106 0000027F 202020202020202A0A 
   107 00000288 2A2020202020202020-             db      "*                                *               *                             *",0ah
   108 00000291 202020202020202020-
   109 0000029A 202020202020202020-
   110 000002A3 2020202020202A2020-
   111 000002AC 202020202020202020-
   112 000002B5 202020202A20202020-
   113 000002BE 202020202020202020-
   114 000002C7 202020202020202020-
   115 000002D0 202020202020202A0A 
   116 000002D9 2A2020202020202020-             db      "*                                *     ***********                             *",0ah
   117 000002E2 202020202020202020-
   118 000002EB 202020202020202020-
   119 000002F4 2020202020202A2020-
   120 000002FD 2020202A2A2A2A2A2A-
   121 00000306 2A2A2A2A2A20202020-
   122 0000030F 202020202020202020-
   123 00000318 202020202020202020-
   124 00000321 202020202020202A0A 
   125 0000032A 2A2020202020202020-             db      "*                          *     *               *     *                       *",0ah
   126 00000333 202020202020202020-
   127 0000033C 202020202020202020-
   128 00000345 2A20202020202A2020-
   129 0000034E 202020202020202020-
   130 00000357 202020202A20202020-
   131 00000360 202A20202020202020-
   132 00000369 202020202020202020-
   133 00000372 202020202020202A0A 
   134 0000037B 2A2020202020202020-             db      "*                          *     **********      *     *                       *",0ah
   135 00000384 202020202020202020-
   136 0000038D 202020202020202020-
   137 00000396 2A20202020202A2A2A-
   138 0000039F 2A2A2A2A2A2A2A2020-
   139 000003A8 202020202A20202020-
   140 000003B1 202A20202020202020-
   141 000003BA 202020202020202020-
   142 000003C3 202020202020202A0A 
   143 000003CC 2A2020202020202020-             db      "*                          *     *               *     *                       *",0ah
   144 000003D5 202020202020202020-
   145 000003DE 202020202020202020-
   146 000003E7 2A20202020202A2020-
   147 000003F0 202020202020202020-
   148 000003F9 202020202A20202020-
   149 00000402 202A20202020202020-
   150 0000040B 202020202020202020-
   151 00000414 202020202020202A0A 
   152 0000041D 2A2020202020202020-             db      "*                          *     *      **********     *                       *",0ah
   153 00000426 202020202020202020-
   154 0000042F 202020202020202020-
   155 00000438 2A20202020202A2020-
   156 00000441 202020202A2A2A2A2A-
   157 0000044A 2A2A2A2A2A20202020-
   158 00000453 202A20202020202020-
   159 0000045C 202020202020202020-
   160 00000465 202020202020202A0A 
   161 0000046E 2A2020202020202020-             db      "*                          *                           *                       *",0ah
   162 00000477 202020202020202020-
   163 00000480 202020202020202020-
   164 00000489 2A2020202020202020-
   165 00000492 202020202020202020-
   166 0000049B 202020202020202020-
   167 000004A4 202A20202020202020-
   168 000004AD 202020202020202020-
   169 000004B6 202020202020202A0A 
   170 000004BF 2A2020202020202020-             db      "*                                                                              *",0ah
   171 000004C8 202020202020202020-
   172 000004D1 202020202020202020-
   173 000004DA 202020202020202020-
   174 000004E3 202020202020202020-
   175 000004EC 202020202020202020-
   176 000004F5 202020202020202020-
   177 000004FE 202020202020202020-
   178 00000507 202020202020202A0A 
   179 00000510 2A2020202020202020-             db      "*           ***   ***   ***   ***   ***   ***   ***   ***   ***   ***          *",0ah
   180 00000519 2020202A2A2A202020-
   181 00000522 2A2A2A2020202A2A2A-
   182 0000052B 2020202A2A2A202020-
   183 00000534 2A2A2A2020202A2A2A-
   184 0000053D 2020202A2A2A202020-
   185 00000546 2A2A2A2020202A2A2A-
   186 0000054F 2020202A2A2A202020-
   187 00000558 202020202020202A0A 
   188 00000561 2A2020202020202020-             db      "*                                                                              *",0ah
   189 0000056A 202020202020202020-
   190 00000573 202020202020202020-
   191 0000057C 202020202020202020-
   192 00000585 202020202020202020-
   193 0000058E 202020202020202020-
   194 00000597 202020202020202020-
   195 000005A0 202020202020202020-
   196 000005A9 202020202020202A0A 
   197 000005B2 2A2020202020202020-             db      "*            *     *     *     *     *     *     *     *     *     *           *",0ah
   198 000005BB 202020202A20202020-
   199 000005C4 202A20202020202A20-
   200 000005CD 202020202A20202020-
   201 000005D6 202A20202020202A20-
   202 000005DF 202020202A20202020-
   203 000005E8 202A20202020202A20-
   204 000005F1 202020202A20202020-
   205 000005FA 202020202020202A0A 
   206 00000603 2A2020202020202020-             db      "*               *     *     *     *     *     *     *     *     *              *",0ah
   207 0000060C 202020202020202A20-
   208 00000615 202020202A20202020-
   209 0000061E 202A20202020202A20-
   210 00000627 202020202A20202020-
   211 00000630 202A20202020202A20-
   212 00000639 202020202A20202020-
   213 00000642 202A20202020202020-
   214 0000064B 202020202020202A0A 
   215 00000654 2A2020202020202020-             db      "*            *     *     *     *     *  W  *     *     *     *     *           *",0ah
   216 0000065D 202020202A20202020-
   217 00000666 202A20202020202A20-
   218 0000066F 202020202A20202020-
   219 00000678 202A20205720202A20-
   220 00000681 202020202A20202020-
   221 0000068A 202A20202020202A20-
   222 00000693 202020202A20202020-
   223 0000069C 202020202020202A0A 
   224 000006A5 2A2020202020202020-             db      "*               *     *     *     *     *     *     *     *     *              *",0ah
   225 000006AE 202020202020202A20-
   226 000006B7 202020202A20202020-
   227 000006C0 202A20202020202A20-
   228 000006C9 202020202A20202020-
   229 000006D2 202A20202020202A20-
   230 000006DB 202020202A20202020-
   231 000006E4 202A20202020202020-
   232 000006ED 202020202020202A0A 
   233 000006F6 2A2020202020202020-             db      "*            *     *     *     *     *     *     *     *     *     *           *",0ah
   234 000006FF 202020202A20202020-
   235 00000708 202A20202020202A20-
   236 00000711 202020202A20202020-
   237 0000071A 202A20202020202A20-
   238 00000723 202020202A20202020-
   239 0000072C 202A20202020202A20-
   240 00000735 202020202A20202020-
   241 0000073E 202020202020202A0A 
   242 00000747 2A2020202020202020-             db      "*               *     *     *     *     *     *     *     *     *              *",0ah
   243 00000750 202020202020202A20-
   244 00000759 202020202A20202020-
   245 00000762 202A20202020202A20-
   246 0000076B 202020202A20202020-
   247 00000774 202A20202020202A20-
   248 0000077D 202020202A20202020-
   249 00000786 202A20202020202020-
   250 0000078F 202020202020202A0A 
   251 00000798 2A2A2A2A2A2A2A2A2A-             db      "********************************************************************************",0ah
   252 000007A1 2A2A2A2A2A2A2A2A2A-
   253 000007AA 2A2A2A2A2A2A2A2A2A-
   254 000007B3 2A2A2A2A2A2A2A2A2A-
   255 000007BC 2A2A2A2A2A2A2A2A2A-
   256 000007C5 2A2A2A2A2A2A2A2A2A-
   257 000007CE 2A2A2A2A2A2A2A2A2A-
   258 000007D7 2A2A2A2A2A2A2A2A2A-
   259 000007E0 2A2A2A2A2A2A2A2A0A 
   260                                  
   261                                  ;define the snek
   262 000007E9 402A2A2A2A2A2A2A3E-     snek:      db "@*******> "
   263 000007F2 20                 
   264 000007F3 0A000000                snekSize:  dd $-snek
   265                                  
   266 000007F7 00000000                screen_offset:  dd 0
   267 000007FB 0000                    snekHead:		dw 0
   268                                  
   269                                  
   270                                  screen_snek: ISTRUC snekStruct
   271 000007FD 1B5B                    			 AT snekStruct.esc,  db 1bh,'['
   272 000007FF 3037                    			 AT snekStruct.row,  db '07'
   273 00000801 3B                      			 AT snekStruct.semi, db ';'
   274 00000802 3030                    			 AT snekStruct.col,  db '00'
   275 00000804 48                      			 AT snekStruct.H, 	 db 'H'
   276 00000805 20                      			 AT snekStruct.char, db ' '			
   277                                  			 IEND
   278                                  
   279                                  section .bss
   280 00000000 <res 0000005A>          reserve_snek:  RESB snekStruct.size*(snekSize - snek)
   281                                  
   282                                  section .text 
   283                                  global _main
   284                                  _main:
   285                                  
   286                                  	;put board on screen
   287                                  ;	mov ecx, 25
   288                                  ;	out_loop:
   289                                  ;		push ecx
   290                                  ;		mov ecx, 81
   291                                  ;		in_loop:
   292                                  ;			push ecx
   293                                  ;			print_to_screen screen, [screen_offset], 1
   294                                  ;			add dword [screen_offset], 1
   295                                  ;			pop ecx
   296                                  ;		loop in_loop
   297                                  ;		pop ecx
   298                                  ;	loop out_loop
   299                                  	;board put on screen
   300                                  
   301                                  	
   302                                  	;calculate snek head position
   303                                  ;	mov ax, [snekSize] 
   304                                  ;	mov bx, 80
   305                                  ;	sub bx, ax
   306                                  ;	shr bx, 1 ;divides by 2
   307                                  ;	mov [snekHead], bx
   308                                  
   309 00000000 31C0                    	xor eax, eax
   310 00000002 31DB                    	xor ebx, ebx
   311 00000004 31C9                    	xor ecx, ecx
   312 00000006 31D2                    	xor edx, edx
   313                                  
   314                                  	;load snek
   315 00000008 66B84600                	mov ax, 80-(snekSize-snek) ;[snekHead]	  ;first column on screen
   316 0000000C BB[00000000]            	mov ebx, reserve_snek ;pointer to reserve snek
   317 00000011 8B0D[F3070000]          	mov ecx, [snekSize]	  ;number of characters in string
   318 00000017 BA[E9070000]            	mov edx, snek 		  ;pointer to original snek
   319                                  
   320                                  	loadTop:
   321 0000001C C6031B                  		mov	BYTE [ebx],1bh
   322 0000001F C643015B                		mov	BYTE [ebx+1],'['
   323 00000023 66C743023037            		mov	WORD [ebx+2],'07'  ;;;; ROW might need to swap these
   324 00000029 C643043B                		mov	BYTE [ebx+4],';'
   325 0000002D 50                      		push	eax		   ;;;; Save this for next loop
   326 0000002E E829000000              		call	_toAscii	   ;;;  Pass in int in ax, returns two ascii digits in ax
   327 00000033 66894305                		mov	WORD [ebx+5],ax
   328 00000037 58                      		pop	eax		   ;;;; Restore the screen col number
   329 00000038 C6430748                		mov	BYTE [ebx+7],'H'
   330 0000003C 51                      		push	ecx
   331 0000003D 8A0A                    		mov	cl,[edx]	   ;;;; Get next char from string
   332 0000003F 884B08                  		mov	[ebx+8],cl
   333 00000042 59                      		pop	ecx
   334 00000043 83C309                  		add	ebx,snekStruct.size
   335 00000046 42                      		inc	edx
   336 00000047 6640                    		inc	ax
   337 00000049 E2D1                    		loop loadTop
   338                                  
   339 0000004B E817000000              	call	_displayMessage
   340                                  
   341                                  
   342                                  ;Normal termination code
   343 00000050 B801000000              mov eax, 1
   344 00000055 BB00000000              mov ebx, 0
   345 0000005A CD80                    int 80h
   346                                  
   347                                  
   348                                  ;functions
   349                                  _toAscii:
   350 0000005C 53                      	push ebx
   351 0000005D B30A                    	mov bl, 10
   352 0000005F F6F3                    	div bl	;push ax/10 in al, remainder in ah
   353 00000061 0430                    	add al, '0'
   354 00000063 0430                    	add al, '0'
   355 00000065 5B                      	pop ebx
   356 00000066 C3                      	ret
   357                                  		
   358                                  ;;;;;;;;;;;   Function to print the array of structs of message
   359                                  _displayMessage:
   360 00000067 60                      	pusha
   361 00000068 BB[00000000]            	mov	ebx, reserve_snek
   362 0000006D 8B0D[F3070000]          	mov	ecx,[snekSize]
   363                                  
   364 00000073 51                      _dmTop:	push	ecx
   365 00000074 53                      	push	ebx
   366 00000075 B804000000              	mov	eax,4  ; system print
   367 0000007A 89D9                    	mov	ecx,ebx ; points to string to print
   368 0000007C BB01000000              	mov	ebx,1   ; standard out
   369 00000081 BA09000000              	mov	edx,9   ; num chars to print
   370 00000086 CD80                    	int	80h
   371                                  
   372 00000088 5B                      	pop	ebx
   373 00000089 83C309                  	add	ebx,snekStruct.size
   374 0000008C 59                      	pop	ecx
   375 0000008D E2E4                    	loop	_dmTop
   376 0000008F 61                      	popa
   377 00000090 C3                      	ret
   378                                  
   379                                  
